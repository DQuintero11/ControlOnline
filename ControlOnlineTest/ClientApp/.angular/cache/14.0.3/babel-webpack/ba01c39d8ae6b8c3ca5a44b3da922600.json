{"ast":null,"code":"import _defineProperty from \"C:/Users/danie/source/repos/ControlOnlineTest/ControlOnlineTest/ClientApp/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\n\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/** @docs-private */\n\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\n\n\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\n\nfunction _resolveDirectionality(rawValue) {\n  const value = rawValue?.toLowerCase() || '';\n\n  if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n    return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n  }\n\n  return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n\n\nclass Directionality {\n  /** The current 'ltr' or 'rtl' value. */\n\n  /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n  constructor() {\n    _defineProperty(this, \"value\", 'ltr');\n\n    _defineProperty(this, \"change\", new EventEmitter());\n\n    const _document = inject(DIR_DOCUMENT, {\n      optional: true\n    });\n\n    if (_document) {\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n    }\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n\n}\n\n_defineProperty(Directionality, \"\\u0275fac\", function Directionality_Factory(t) {\n  return new (t || Directionality)();\n});\n\n_defineProperty(Directionality, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Directionality,\n  factory: Directionality.ɵfac,\n  providedIn: 'root'\n}));\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Directionality, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n\n\nclass Dir {\n  constructor() {\n    _defineProperty(this, \"_dir\", 'ltr');\n\n    _defineProperty(this, \"_isInitialized\", false);\n\n    _defineProperty(this, \"_rawDir\", void 0);\n\n    _defineProperty(this, \"change\", new EventEmitter());\n  }\n\n  /** @docs-private */\n  get dir() {\n    return this._dir;\n  }\n\n  set dir(value) {\n    const previousValue = this._dir; // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n    // whereas the browser does it based on the content of the element. Since doing so based\n    // on the content can be expensive, for now we're doing the simpler matching.\n\n    this._dir = _resolveDirectionality(value);\n    this._rawDir = value;\n\n    if (previousValue !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n  /** Current layout direction of the element. */\n\n\n  get value() {\n    return this.dir;\n  }\n  /** Initialize once default value has been set. */\n\n\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n\n}\n\n_defineProperty(Dir, \"\\u0275fac\", function Dir_Factory(t) {\n  return new (t || Dir)();\n});\n\n_defineProperty(Dir, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Dir,\n  selectors: [[\"\", \"dir\", \"\"]],\n  hostVars: 1,\n  hostBindings: function Dir_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx._rawDir);\n    }\n  },\n  inputs: {\n    dir: \"dir\"\n  },\n  outputs: {\n    change: \"dirChange\"\n  },\n  exportAs: [\"dir\"],\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Directionality,\n    useExisting: Dir\n  }])]\n}));\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dir, [{\n    type: Directive,\n    args: [{\n      selector: '[dir]',\n      providers: [{\n        provide: Directionality,\n        useExisting: Dir\n      }],\n      host: {\n        '[attr.dir]': '_rawDir'\n      },\n      exportAs: 'dir'\n    }]\n  }], null, {\n    change: [{\n      type: Output,\n      args: ['dirChange']\n    }],\n    dir: [{\n      type: Input\n    }]\n  });\n})();\n\nclass BidiModule {}\n\n_defineProperty(BidiModule, \"\\u0275fac\", function BidiModule_Factory(t) {\n  return new (t || BidiModule)();\n});\n\n_defineProperty(BidiModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BidiModule\n}));\n\n_defineProperty(BidiModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({}));\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BidiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Dir],\n      exports: [Dir]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };","map":{"version":3,"names":["i0","InjectionToken","inject","EventEmitter","Injectable","Directive","Output","Input","NgModule","DOCUMENT","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","value","toLowerCase","navigator","language","test","Directionality","constructor","_document","optional","bodyDir","body","dir","htmlDir","documentElement","ngOnDestroy","change","complete","type","args","Dir","_dir","previousValue","_rawDir","_isInitialized","emit","ngAfterContentInit","provide","useExisting","selector","providers","host","exportAs","BidiModule","imports","exports"],"sources":["C:/Users/danie/source/repos/ControlOnlineTest/ControlOnlineTest/ClientApp/node_modules/@angular/cdk/fesm2022/bidi.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /** The current 'ltr' or 'rtl' value. */\n    value = 'ltr';\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n    change = new EventEmitter();\n    constructor() {\n        const _document = inject(DIR_DOCUMENT, { optional: true });\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: Directionality, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: Directionality, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    /** Normalized direction that accounts for invalid/unsupported values. */\n    _dir = 'ltr';\n    /** Whether the `value` has been set to its initial value. */\n    _isInitialized = false;\n    /** Direction as passed in by the consumer. */\n    _rawDir;\n    /** Event emitted when the direction changes. */\n    change = new EventEmitter();\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.1.3\", type: Dir, isStandalone: true, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.1.3\", ngImport: i0, type: BidiModule, imports: [Dir], exports: [Dir] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: BidiModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Dir],\n                    exports: [Dir],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}